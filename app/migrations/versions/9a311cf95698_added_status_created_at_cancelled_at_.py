"""added status, created_at, cancelled_at columns for Bookings

Revision ID: 9a311cf95698
Revises: 9cd055ff3f05
Create Date: 2024-08-18 19:56:32.738691

"""
from datetime import datetime, timezone
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.sql import text

# revision identifiers, used by Alembic.
revision: str = '9a311cf95698'
down_revision: Union[str, None] = '9cd055ff3f05'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

current_time = datetime.now(timezone.utc).replace(tzinfo=None)

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('booking_confirmations', 'expires_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.add_column('bookings', sa.Column('created_at', sa.DateTime(), nullable=False, server_default=text(f"'{current_time}'")))
    op.add_column('bookings', sa.Column('status', sa.Integer(), nullable=False, server_default=text('2')))
    op.add_column('bookings', sa.Column('cancelled_at', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###

    # Обновляем существующие записи, чтобы установить значение по умолчанию для новых столбцов
    op.execute("UPDATE bookings SET status = 2 WHERE status IS NULL")
    op.execute(f"UPDATE bookings SET created_at = '{current_time}' WHERE created_at IS NULL")

    # Удаляем дефолтное значение с колонок
    op.alter_column('bookings', 'status', existing_type=sa.Integer(), nullable=False, server_default=None)
    op.alter_column('bookings', 'created_at', existing_type=sa.DateTime(), nullable=False, server_default=None)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('bookings', 'cancelled_at')
    op.drop_column('bookings', 'created_at')
    op.drop_column('bookings', 'status')
    op.alter_column('booking_confirmations', 'expires_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    # ### end Alembic commands ###
