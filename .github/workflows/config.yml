name: Tests

on:
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.1.7

      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o docker-compose
          chmod +x docker-compose
          sudo mv docker-compose /usr/local/bin/

      - name: Build Docker containers
        env:
          MODE: ${{ secrets.MODE }}
          LOG_LEVEL: ${{ secrets.LOG_LEVEL }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_NAME: ${{ secrets.DB_NAME }}
          TEST_DB_HOST: ${{ secrets.TEST_DB_HOST }}
          TEST_DB_PORT: ${{ secrets.TEST_DB_PORT }}
          TEST_DB_USER: ${{ secrets.TEST_DB_USER }}
          TEST_DB_PASS: ${{ secrets.TEST_DB_PASS }}
          TEST_DB_NAME: ${{ secrets.TEST_DB_NAME }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          TEST_POSTGRES_DB: ${{ secrets.TEST_POSTGRES_DB }}
          TEST_POSTGRES_USER: ${{ secrets.TEST_POSTGRES_USER }}
          TEST_POSTGRES_PASSWORD: ${{ secrets.TEST_POSTGRES_PASSWORD }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          ALGORITHM: ${{ secrets.ALGORITHM }}
        run: |
          docker-compose build

      - name: Start Docker containers
        env:
          MODE: ${{ secrets.MODE }}
          LOG_LEVEL: ${{ secrets.LOG_LEVEL }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_NAME: ${{ secrets.DB_NAME }}
          TEST_DB_HOST: ${{ secrets.TEST_DB_HOST }}
          TEST_DB_PORT: ${{ secrets.TEST_DB_PORT }}
          TEST_DB_USER: ${{ secrets.TEST_DB_USER }}
          TEST_DB_PASS: ${{ secrets.TEST_DB_PASS }}
          TEST_DB_NAME: ${{ secrets.TEST_DB_NAME }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          TEST_POSTGRES_DB: ${{ secrets.TEST_POSTGRES_DB }}
          TEST_POSTGRES_USER: ${{ secrets.TEST_POSTGRES_USER }}
          TEST_POSTGRES_PASSWORD: ${{ secrets.TEST_POSTGRES_PASSWORD }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          ALGORITHM: ${{ secrets.ALGORITHM }}
        run: |
          docker-compose up -d

      - name: Check container health and logs
        run: |
          docker ps -a
          docker-compose logs booking
        continue-on-error: true

        

          



