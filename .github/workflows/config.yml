name: Tests

on:
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.1.7

      - name: Create .env file
        run: |
          echo "MODE=${{ secrets.MODE }}" >> .env
          echo "LOG_LEVEL=${{ secrets.LOG_LEVEL }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "TEST_DB_HOST=${{ secrets.TEST_DB_HOST }}" >> .env
          echo "TEST_DB_PORT=${{ secrets.TEST_DB_PORT }}" >> .env
          echo "TEST_DB_USER=${{ secrets.TEST_DB_USER }}" >> .env
          echo "TEST_DB_PASS=${{ secrets.TEST_DB_PASS }}" >> .env
          echo "TEST_DB_NAME=${{ secrets.TEST_DB_NAME }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "TEST_POSTGRES_DB=${{ secrets.TEST_POSTGRES_DB }}" >> .env
          echo "TEST_POSTGRES_USER=${{ secrets.TEST_POSTGRES_USER }}" >> .env
          echo "TEST_POSTGRES_PASSWORD=${{ secrets.TEST_POSTGRES_PASSWORD }}" >> .env
          echo "SMTP_HOST=${{ secrets.SMTP_HOST }}" >> .env
          echo "SMTP_PORT=${{ secrets.SMTP_PORT }}" >> .env
          echo "SMTP_USER=${{ secrets.SMTP_USER }}" >> .env
          echo "SMTP_PASS=${{ secrets.SMTP_PASS }}" >> .env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "ALGORITHM=${{ secrets.ALGORITHM }}" >> .env

      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o docker-compose
          chmod +x docker-compose
          sudo mv docker-compose /usr/local/bin/

      - name: Build Docker containers
        run: docker-compose --env-file .env build

      - name: Start Docker containers
        run: docker-compose up -d

      - name: Check container health and logs
        run: |
          docker ps
          docker logs booking_app
          docker logs booking_db
          docker logs test_booking_db
          docker logs booking_redis
          docker logs booking_celery
          docker logs booking_celery_beat
          docker logs booking_flower
        continue-on-error: true

      - name: Stop Docker containers
        run: docker-compose down

        

          



