services: 
  db: 
    image: postgres:16.3
    container_name: booking_db
    env_file:
      - .env
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 20s
      timeout: 5s
      retries: 10
    restart: on-failure
    
  redis:
    image: redis:7
    container_name: booking_redis

  booking:
    image: booking_image
    build:
      context: .
    container_name: booking_app
    command: ['/booking/docker/app.sh']
    ports:
      - "7777:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started


  celery:
    image: celery_image
    build:
      context: .
    container_name: booking_celery
    command: ['/booking/docker/celery.sh', 'celery']
    depends_on:
      - redis

  celery_beat:
    image: booking_celery
    build:
      context: .
    container_name: booking_celery_beat
    command: sh -c "celery --app=app.tasks.celery:celery worker -l INFO -B"
    depends_on:
      - redis

  flower:
    image: flower_image
    build:
      context: .
    container_name: booking_flower
    command: ['/booking/docker/celery.sh', 'flower']
    depends_on:
      - redis

volumes:
  postgresdata: